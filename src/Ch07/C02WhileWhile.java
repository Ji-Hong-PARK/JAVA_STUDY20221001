package Ch07;

import java.util.Scanner;

public class C02WhileWhile {

	public static void main(String[] args) {
	
		//--------------------------------내부평가!  시험에 나옴
//		2
//		3
//		4
//		5
//		.
//		.
//		dan	= 2
//		dna ++
//		dna <=9
		
		
//		int dan = 2;
//		int i;
//		while(dan<=9) 
//		{
//			i=1;
//			while(i<=9)
//			{
//				System.out.printf("%d x %d = %d\n",dan,i,dan*i);
//				i++;
//			}
//			System.out.println();
//			dan++;
//		}
		
		
		// 전체 구구단 (2단 - 9단) 출력하기
	
		
//		int dan = 2;
//		int i;
//		while(dan<=9) 
//		{
//			i=1;
//			while(i<=9)
//			{
//				System.out.printf("%d x %d = %d\n",dan,i,dan*i);
//				i++;
//			}
//			System.out.println();
//			dan++;
//		}
		
		// 전체 구구단 (2단 - 9단) 출력하기(다만 역순으로)
		
		
//		dan = 2		i = 9
//		dan ++		i --
//		dan <=9		i >= 1
		
//		int dan = 2;
//		int i;
//		while(dan<=9) 
//		{
//			i=9;		//초기값
//			while(i>=1)	//연산식
//			{
//				System.out.printf("%d x %d = %d\n",dan,i,dan*i);
//				i--;	//탈출값
//			}
//			System.out.println();
//			dan++;
//		}
		
		// 전체 구구단 (2단 - 9단) 출력하기(전체 역순출력)
		
//		int dan = 9;
//		int i;
//		while(dan>=2) 
//		{
//			i=9;		//초기값
//			while(i>=1)	//연산식
//			{
//				System.out.printf("%d x %d = %d\n",dan,i,dan*i);
//				i--;	//탈출값
//			}
//			System.out.println();
//			dan--;
//		}
		
		// N 부터 9단까지 전체 출력
		// 풀어보자
		
		
		
		
		
		
		
		//반복문의 규칙을 찾으라!!
		
		//문제!
		
		//1
		//*****
		//*****
		//*****
		//*****
		
	// 1번문제에 대해서   ***** 이 행마다 연속적으로 4번을 반복함
	// i	j
	// 0	0-4
	// 1	0-4
	// 2	0-4
	// 3	0-4
	//-----------------
	// i = 0 (i의 초기값은 0)								/	j = 0
	// i++	 (i는 4번 반복으로 초기값에서 증가를 한다)				/	j = ++
	// i < 4 (i는 총 4번의 출력을 하므로 4보다 < 작다고 표현한다.)	/	j < 5 (0,1,2,3,4 총 다섯번.) 
		
	// 코드 풀이
//		int i = 0;
//		int j = 0;
//		while(i<4)
//		{
//			j=0;
//			while(j<5)
//			{
//				System.out.print("*");
//				j++;
//			}
//			System.out.println();
//			i++;
//		}
		

		
		
		//2
		//*
		//**
		//***
		//****
		//*****

		//2번 문제에대해서 별이 몇개인지 확인을 해라
		
		//	i					j
		//	0					0-0
		//	1					0-1
		//	2					0-2
		//	3					0-3
		//-----------------------------
		//	i=0					j=0
		//	i++					j++
		//	i < 4				j <= i (j는 i와 같은 반복된 숫자를 증가하니깐)
		
		// 코드 풀이
		
//		int i = 0;
//		int j = 0;
//		while (i<4) 
//		{
//			j = 0;
//			while(j<=i)
//			{	
//			System.out.print("*");
//			j++;
//			}
//			System.out.println();
//			i++;		
//		}
	
		
		
		//3
		//*****
		//****
		//***
		//**
		//*
		
		//3번문제의 규칙을 보자.
		
		//	i					j
		//	0					0-3
		//	1					0-2
		//	2					0-1
		//	3					0-0
		//-----------------------------
		//	i=0					j=0
		//	i++					j++
		//	i < 4				j >= ?? (역 삼각형이 나올려면 어떻게 해야하나?) 최대값-i를 하면 역순이다.
		
		// 높이 입력받을때 
		//		i					j
		//		0					0-(n-1) - 0
		//		1					0-(n-1) - 1
		//		2					0-(n-1) - 2
		//		n-1					0-0		
		
		//		i=0					j=n
		//		i++					j++
		//		i < n(n-1)			j <= (n-1)-i
		
		//코드 풀이
		
//		int i = 0;
//		int j = 0;
//		
//		while (i<4)
//		{
//			j=3;	
//			while (j >= i) 
//			{
//				System.out.print("*");
//				j--;
//			}
//			System.out.println();
//			i++;
//		}
		
			//or
		
//		int i = 0;
//		int j = 0;
//		
//		while (i<4)
//		{
//			j=0;	
//			while (j <= 3-i) 
//			{
//				System.out.print("*");
//				j++;
//			}
//			System.out.println();
//			i++;
//		}
		
		
		// 높이 입력 받아서 적을때......
		
//		Scanner sc = new Scanner(System.in);
//		System.out.print("높이 : ");
//		int n = sc.nextInt();
//		int i = 0;
//		int j = 0;
//		while (i<n)
//		{
//			j=0;	
//			while (j <=(n-1)-i) 
//			{
//				System.out.print("*");
//				j++;
//			}
//			System.out.println();
//			i++;
//		}				
		
		
		
	

		
		
		
		
		
//		// 별첨!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//		//----------높이 입력 받아서 적기
//		//		n번째의 정수를 받아서 높이를 찍는거
//		//	i				j
//		//	0				0-4
//		//	1				0-4
//		//	2				0-4
//		// 	3				0-4
//		//	4
//		//	.
//		//	.
//		//	n-1번째 높이
//		//------------------------
//		//	i = 0			j = 0
//		//	i++				j++
//		//	i < n			j < 5
//		// 정사각형 모양으로 만들려면  i<n, j<n으로 값이 똑같으면 정사각형이된다.
//		// 
//		
//		
//		Scanner sc = new Scanner(System.in);
//		System.out.print("높이 : ");
//		int n = sc.nextInt();
//		int i = 0;
//		int j = 0;
//		while (i<n)
//		{
//			j=0;	
//			while (j < n) 
//			{
//				System.out.print("*");
//				j++;
//			}
//			System.out.println();
//			i++;
//		}		
		
		
		
		
		
		
		//문제 4번 높이를 입력받아서 적어라.
		
		//4
		// 		   *
		//		  ***
		//		 *****
		//		*******
		
		//----------높이 입력 받아서 적기
		//		n번째의 정수를 받아서 높이를 찍는거
		//	i				j
		
		//	0				0-0
		//	1				0-1
		//	2				0-2
		// 	3				0-3
		//	4
		//	.
		//	.
		//	n-1번째 높이
		//----------- 조건식 --------
		//	i = 0			j = 0
		//	i++				j++
		//	i < n			j < i
		// 정 사각형 모양으로 만들려면  i<n, j<n으로 값이 똑같으면 정사각형이된다.
		// 정 삼각형 모양으로 만들려면 어떻게 해야할까??
		// n = 4  i = 4
		
		
//		Scanner sc = new Scanner(System.in);
//		System.out.print("높이 : ");
//		int n = sc.nextInt();
//		int i = 0;
//		int j = 0;
//		while (i<n)
//		{
//			j=0;	
//			while (j <= i) 
//			{
//				System.out.print("*");
//				j++;
//			}
//			System.out.println();
//			i++;
//		}				
		
		
		//	i(개형)		j(공백)		k(별)
		//	0			0-2			0-0
		//	1			0-1			0-2		두번째 행 공백이 2칸 
		//	2			0-0			0-4		
		//	3			X			0-6
	//-----------------------------------
		//			j = 0			k = 0
		//			j ++			k ++
		//			j <= 2-i		k <= 2*i	(별이 행마다 2 - 4 -6  2의 배수니 2*i)라고 쓴다.
		//			- j공백이 2- 1- 0 순으로 숫자가 작아지니 2-i
		
		
//		int i = 0;  //행
//		int j = 0;	//공백
//		int k = 0;	//별
		
//		while(i<4)	//행을 4번 반복한다 0,1,2,3
//		{
//			System.out.println();
//			i++;
//		}
	
//		while(i<4)	//행을 4번 반복한다 0,1,2,3
//		{	
//			//공백은 항상 0으로 초기화
//			j=0;
//			while()
//			{
//				System.out.print(" ");
//				j++;
//			}
//			//별
//			k=0;
//			while()
//			{
//			 System.out.print("*");
//			 k++;
//			}
//			System.out.println();
//			i++;
//		}
		
		
//		while(i<4)	//행을 4번 반복한다 0,1,2,3
//		{	
//			//공백은 항상 0으로 초기화
//			j=0;
//			while(j<=2-i)
//			{
//				System.out.print(" ");
//				j++;	// 공백 j역시 while문 돌때마다 증가를 시킨다.
//			}
//			//별 역시 초기화를 시켜서 0으로 적어준다,
//			k=0;
//			while(k<=2*i)
//			{
//			 System.out.print("*");
//			 k++;	// 별을 while문을 돌떄마다 증가시켜준다.
//			}
//			System.out.println();
//			i++;
//		}
		
		
		

		//5
		//	  	*******
		//	  	 *****
		//	   	  ***
		//	 	   *		
		
		//	i(개형)		j(공백 횟수)		k(별갯수)
		//	0			X			0-6 (6-2*i) / 6-2*0
		//	1			0-0			0-4	(6-2*i)	/ 6-2*1
		//	2			0-1			0-2		
		//	3			0-2			0-0		
	//-----------------------------------
		//			j = 0			k = 0
		//			j ++			k ++
		//			j <= ?			k <= ?	
		//조건식을 빼고 나머지  증가값이나 별 출력문 등은 미리 적어두고.
		// 마지막 조건식을 알아보자  역 순 피라미드
		// j <= (i-1)  				k <= (6-2*i)
		
		
		
		
//		while(i<4)	//행을 4번 반복한다 0,1,2,3
//		{	
//			//공백은 항상 0으로 초기화
//			j=0;
//			while(j<=2-i)
//			{
//				System.out.print(" ");
//				j++;	// 공백 j역시 while문 돌때마다 증가를 시킨다.
//			}
//			//별 역시 초기화를 시켜서 0으로 적어준다,
//			k=0;
//			while(k<=2*i)
//			{
//			 System.out.print("*");
//			 k++;	// 별을 while문을 돌떄마다 증가시켜준다.
//			}
//			System.out.println();
//			i++;
//		}
		
		
		

		
// 높이 :  5 입력받아서 별을 만들어보자.
//		   *
//		  ***
//		 *****
//		*******		

		
		
// i(개행)				j(공백 횟수)				k(별)
// 0					0-(n-2)-0			0-0
// 1					0-(n-2)-1			0-2
// 2					0-(n-2)-2			0-4
// 3					x					0-6

// 						j <= (n-2)-i		k <= 2*i

//		Scanner sc = new Scanner(System.in);
//		int n = sc.nextInt();	//높이
//		int i = 0, j=0, k=0;
//		//i = 행, j = 공백 , k = 별
//		
//		while(i<n)	
//		{	
//			//공백
//			j=0;
//			while(j<=(n-2)-i)
//			{
//				System.out.print(" ");
//				j++;	
//			}
//			
//			k=0;
//			while(k<=2*i)
//			{
//			 System.out.print("*");
//			 k++;	// 별을 while문을 돌떄마다 증가시켜준다.
//			}
//			System.out.println();
//			i++;
//		}		
		
		
		
		

		
		

		//	높이 입력받아서 역삼각형 만들기
		
		//	  	*******
		//	  	 *****
		//	   	  ***
		//	 	   *		
		
		//높이 4를 받았을때...
		
		//	i(개형)		j(공백)		k(별)
		//	0			X			0-6  / 0-(n-1)*2-2*0
		//	1			0-0			0-4	 / 0-(n-1)*2-2*1
		//	2			0-1			0-2	 / 0-(n-1)*2-2*2
		//	3			0-2			0-0
		// n-1						0-(n-1)*2-2*i
	//-----------------------------------
		//			j = 0			k = 0
		//			j ++			k ++
		//			j <= ?			k <= ?	
		//			j <= i-1		k <= 2*i	
		
		
		//k(별) = n(높이) 와 관련이 있다  높이가 높을수록 별수가 적어진다.
		// 높이가 n이라면  
		
//		Scanner sc = new Scanner(System.in);
//		int n = sc.nextInt();	//높이
//		int i = 0, j=0, k=0;
//		//i = 행, j = 공백 , k = 별
//		
//		while(i<n)	
//		{	
//			//공백
//			j=0;
//			while(j <= i-1)
//			{
//				System.out.print(" ");
//				j++;	
//			}
//			
//			k=0;
//			while(k <= (n-1)*2-2*i)
//			{
//			 System.out.print("*");
//			 k++;	// 별을 while문을 돌떄마다 증가시켜준다.
//			}
//			System.out.println();
//			i++;
//		}				
		
		

		
		
		
		//문제 다이아몬드 만들기. 7층짜리.
		
		//		   *
		//		  ***
		//		 *****
		//		*******				
		//	  	 *****
		//	   	  ***
		//	 	   *		
		
		
		// 수기풀이
		//i			 j(공백) 			k(별)
		//1			0 - 2			0 - 0
		//2			0 - 1			0 -	2
		//3			0 - 0			0 - 4
		//									별이 증가
		//----------------------------------------------
		//			j = 0			k = 0
		//			j ++			k ++
		//			j<= ?			k <= ?
		
		//			j는 1씩 감소하는 규칙 / k는 2의 배수로 증가한다.
		//			2-i 하면 감소한다. 	 /  k<= 2*i 라 적으면된다.
		
		
		//X			  X				0 - 6			<- 다이아몬드 만들때 분기점이라고 생각하면된다.
														//if문으로 별을 나눈다.
		
		
		//									별이 감소
		//4			0 - 0			0 - 4
		//5			0 - 1			0 - 2
		//6			0 - 2			0 - 0
		//-----------------------------------------------
	
		//			j = 0			k = 0
		//			j ++			k ++
		//			j <= ?			k <= ?
		
		//			j는 i - 4	/	k는 12 - 2 * i 라는 공식을 보면된다.
		//							12라는 숫자는 5번행(실직적으로 4번째 찍히는 별)이 4+2*i(4)라는 공식이 나온다.
		//							7행중'-1'= 6 +2*i 라고 생각하면된다. // 역순이면 6- 2* i
		
//		int i = 0;
//		int j = 0;
//		int k = 0;
//		
//		while(i<7)
//		{
//			if(i<4) // i가 3일때  분기점이니깐  i<4보다 작을때 라고 쓴다.
//			{
//				//공백
//				j = 0;
//				while(j <= 2-i)
//				{
//					System.out.print(" ");
//					j++;
//				}
//				// 별
//				k = 0;
//				while(k <= 2*i)
//				{
//					System.out.print("*");
//					k++;
//				}
//			}
//			else
//			{
//				//공백
//				j = 0;
//				while(j<= i-4)
//				{
//					System.out.print(" ");
//					j++;
//				}
//				//별
//				k = 0;
//				while(k <= 12-2*i)
//				{
//					System.out.print("*");
//					k++;
//				}		
//			}
//			System.out.println();
//			i++;	// 행 증가값
//		}
		
		
		
		// 다이아몬드 만들기  값
//		j<= (n/2-1)-i
//		k<= (2*i)
//		
//		j<= i-(n/2+1)
//		k<= (n-1)*2-2*i
		
		//
		
//		Scanner sc = new Scanner(System.in);
//		int n = sc.nextInt();
//		
//		int i=0, j=0, k=0;
//		while(i <= n)
//		{
//			if(i<(n/2))
//			{
//				//공백
//				j=0;
//				while(j<=(n/2-1)-i)
//					{
//						System.out.print(" ");
//						j++;
//					}
//				//별
//				k=0;
//				while(k <= 2*i)
//				{
//					System.out.print("*");
//					k++;
//				}	
//			}
//			else
//			{
//				//공백
//				j=0;
//				while(j<= i-(n/2+1))
//					{
//						System.out.print(" ");
//						j++;
//					}
//				//별
//				k=0;
//				while(k <= (n-1)*2-2*i)
//				{
//					System.out.print("*");
//					k++;
//				}
//			}
//			System.out.println();
//			i++;
//		}
		
		
		
		
		
		

		

	}

}
